AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Roman Numerals Converter Application. This template creates Python Flask Web Application on Amazon Linux 2 
  (XXXXXXXXXXXXXXXXX) EC2 Instance with custom security group allowing http connections on port 80.
  Roman Numerals Converter Application is downloaded from Github repository, then installed on Flask.
  
Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 Keypair
  
Resources:
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Tag
      VpcId: String
  WebServerHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack
      UserData: !Base64 |
            #!/bin/bash
            yum update -y
            yum install python3 -y
            pip3 install flask
            cd /home/ec2-user
            https://raw.githubusercontent.com/Anthncara/MEMO-PersonnalChallenges/master/CW%20AWS%20Projects/102%20-roman-numerals-converter/MEMO%20app.py
            mkdir templates
            cd templates
            https://raw.githubusercontent.com/Anthncara/MEMO-PersonnalChallenges/master/CW%20AWS%20Projects/102%20-roman-numerals-converter/templates/index.html
            https://raw.githubusercontent.com/Anthncara/MEMO-PersonnalChallenges/master/CW%20AWS%20Projects/102%20-roman-numerals-converter/templates/result.html
            cd ..
            python3 appV2.py

Outputs:
  WebsiteURL:
    Description: Roman Numerals Converter Application Website URL
    Value: !Sub
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName
